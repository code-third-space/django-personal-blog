# 主分类 - 更新为实际使用的分类名称
BlogTypes = [
    [0, "Python"],
    [1, "Web"],
    [2, "Backend"],
    [3, "Database"],
    [4, "Algo"],
    [5, "Tools"],
]

# 为每个主分类定义固定的二级分类
TechCategories = [
    [0, "编程开发"],
    [1, "人工智能"],
    [2, "数据科学"],
    [3, "网络安全"],
    [4, "云计算"],
    [5, "区块链"],
    [6, "物联网"],
    [7, "移动开发"],
    [8, "前端技术"],
    [9, "后端技术"],
]

NewsCategories = [
    [0, "国内新闻"],
    [1, "国际新闻"],
    [2, "科技动态"],
    [3, "社会热点"],
    [4, "政治时事"],
    [5, "文化教育"],
]

FinanceCategories = [
    [0, "股票市场"],
    [1, "基金投资"],
    [2, "外汇交易"],
    [3, "经济分析"],
    [4, "财经政策"],
    [5, "企业财报"],
]

ReadingCategories = [
    [0, "文学作品"],
    [1, "历史读物"],
    [2, "科普书籍"],
    [3, "哲学思想"],
    [4, "心理学"],
    [5, "经管励志"],
]

SceneryCategories = [
    [0, "自然风光"],
    [1, "城市景观"],
    [2, "历史古迹"],
    [3, "人文景观"],
    [4, "旅游攻略"],
    [5, "摄影技巧"],
]

ItemCategories = [
    [0, "数码产品"],
    [1, "家居用品"],
    [2, "服饰穿搭"],
    [3, "美食烹饪"],
    [4, "汽车评测"],
    [5, "收藏品"],
]

# 根据主分类获取对应的二级分类
def get_subcategories(blog_type):
    subcategories_map = {
        0: TechCategories,      # Python -> 技术类二级分类
        1: NewsCategories,      # Web -> 资讯类二级分类
        2: FinanceCategories,   # Backend -> 财经类二级分类
        3: ReadingCategories,   # Database -> 阅读类二级分类
        4: SceneryCategories,   # Algo -> 风景类二级分类
        5: ItemCategories,      # Tools -> 物品类二级分类
    }
    return subcategories_map.get(blog_type, [])

Countries = [
    [0, "中国"],
    [1, "美国"],
    [2, "俄罗斯"],
]

Cities = [
    [0, "北京"],
    [1, "上海"],
    [2, "深圳"],
    [3, "杭州"],
    [4, "成都"],
    [5, "长沙"],
    [6, "南京"],
    [7, "重庆"],
    [8, "贵州"],
    [9, "武汉"],
    [10, "纽约"],
    [11, "华盛顿"],
    [12, "洛杉矶"],
    [13, "加州"],
    [14, "德克萨斯州"],
    [15, "莫斯科"],
] 